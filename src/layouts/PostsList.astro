---
import Layout from './Layout.astro';
import CategoriesList from '@components/CategoriesList.astro';
import ProfileCard from '@components/layout/ProfileCard.astro';
import ContactLinks from '@components/layout/ContactLinks.astro';
import FooterCopy from '@components/layout/FooterCopy.astro';
import siteConfig from '@config/site';
import {
  type PostEntry,
  getCategoryConfig,
  getCategoryPathSegment,
  getPostCategory,
  getPostImage,
  getPostPermalink,
  groupPostsByLocales,
} from '@lib/content';
import { DEFAULT_LOCALE, SUPPORTED_LOCALES, isDefaultLocale } from '@lib/language';
import { formatDate } from '@lib/format';
import { ensureTrailingSlash } from '@utils/url';
import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from '@i18n/utils';

const {
  title,
  description,
  keywords,
  categoryId,
  posts,
  page,
}: {
  title?: string;
  description?: string;
  keywords?: string;
  categoryId?: string;
  posts: PostEntry[];
  page: {
    url: {
      current: string;
      prev?: string;
      next?: string;
    };
  };
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const prevPageUrl = page.url.prev
  ? ensureTrailingSlash(page.url.prev)
  : undefined;
const nextPageUrl = page.url.next
  ? ensureTrailingSlash(page.url.next)
  : undefined;

const categoriesSet = new Set(posts.map((post) => getPostCategory(post)));
const shouldShowCategories = !categoryId && categoriesSet.size > 1;

const categoryMeta = categoryId ? getCategoryConfig(categoryId) : null;

const socialNetworkNames: Record<string, string> = {
  github: 'GitHub',
  twitter: 'Twitter',
  linkedin: 'LinkedIn',
  telegram: 'Telegram',
  rss: 'RSS',
  email: 'Email',
  facebook: 'Facebook',
  instagram: 'Instagram',
  youtube: 'YouTube',
  discord: 'Discord',
  mastodon: 'Mastodon',
  reddit: 'Reddit',
  pinterest: 'Pinterest',
  tumblr: 'Tumblr',
  whatsapp: 'WhatsApp',
  tiktok: 'TikTok',
  twitch: 'Twitch',
};

const socialLinks = (() => {
  const links: Array<{ key: string; name: string; url: string }> = [];
  const basePrefix = isDefaultLocale(lang) ? '' : `/${lang}`;

  if (siteConfig.features.rss) {
    links.push({
      key: 'rss',
      name: 'RSS',
      url: `${basePrefix}/rss.xml`,
    });
  }

  const defaultLangLinks =
    siteConfig.socialLinks[DEFAULT_LOCALE] ?? {};
  const localizedLinks =
    siteConfig.socialLinks[lang as keyof typeof siteConfig.socialLinks] ??
    defaultLangLinks;

  for (const [key, url] of Object.entries(localizedLinks)) {
    if (!url) continue;
    links.push({
      key,
      name: socialNetworkNames[key] ?? key.charAt(0).toUpperCase() + key.slice(1),
      url,
    });
  }

  return links;
})();

const postsWithMetadata = posts.map((post) => {
  const category = getPostCategory(post);
  const meta = siteConfig.categories[category];
  const categoryLabel =
    meta?.label?.[lang] ??
    meta?.label?.[DEFAULT_LOCALE] ??
    category;

  return {
    url: getPostPermalink(post),
    title: post.data.h1 ?? post.data.title,
    announcement: post.data.announcement,
    category,
    categoryLabel,
    date: formatDate(post.data.date, lang),
    image: getPostImage(post),
  };
});

const currentCategoryLabel = categoryMeta
  ? categoryMeta.label?.[lang] ??
    categoryMeta.label?.[DEFAULT_LOCALE] ??
    categoryId
  : t('ui.all_posts');
const categoryIcon = categoryMeta?.icon ?? 'üìÇ';
const categoryDescription = categoryMeta?.description?.[lang] ?? null;

const currentPageNumber = page.currentPage ?? 1;
const postsPerPage = Math.max(1, siteConfig.postsPerPage || 1);
const categorySegment = categoryId ? getCategoryPathSegment(categoryId) : null;

const buildBasePathForLocale = (localeCode: string): string => {
  const isDefault = localeCode.toLowerCase() === DEFAULT_LOCALE.toLowerCase();
  const categoryPath = categorySegment ? `/${categorySegment}` : '';
  const basePath = isDefault ? categoryPath || '/' : `/${localeCode}${categoryPath}`;
  return ensureTrailingSlash(basePath);
};

const buildPathForLocale = (localeCode: string): string => {
  const basePath = buildBasePathForLocale(localeCode);
  if (currentPageNumber <= 1) {
    return basePath;
  }

  const pagedPath = `${basePath}${currentPageNumber}`;
  return ensureTrailingSlash(pagedPath);
};

const localeGroups = await groupPostsByLocales(SUPPORTED_LOCALES, {
  category: categoryId,
});

const alternateEntries = new Map<string, { lang: string; path: string }>();

const registerAlternate = (localeCode: string) => {
  const normalizedCode = localeCode.toLowerCase();
  if (alternateEntries.has(normalizedCode)) {
    return;
  }

  const resolvedCode =
    SUPPORTED_LOCALES.find((candidate) => candidate.toLowerCase() === normalizedCode) ??
    localeCode;

  alternateEntries.set(normalizedCode, {
    lang: resolvedCode,
    path: buildPathForLocale(resolvedCode),
  });
};

registerAlternate(lang);

for (const group of localeGroups) {
  const totalPages = Math.ceil(group.posts.length / postsPerPage);
  if (totalPages === 0) {
    continue;
  }

  if (currentPageNumber > totalPages) {
    continue;
  }

  registerAlternate(group.lang);
}

const alternates = Array.from(alternateEntries.values()).map(({ lang: localeCode, path }) => ({
  lang: localeCode,
  url: new URL(path, siteConfig.siteUrl).toString(),
}));

const defaultAlternate = alternateEntries.get(DEFAULT_LOCALE.toLowerCase());
if (defaultAlternate) {
  alternates.push({
    lang: 'x-default',
    url: new URL(defaultAlternate.path, siteConfig.siteUrl).toString(),
  });
}
---
<Layout
  title={title}
  description={description}
  keywords={keywords}
  prevPageUrl={prevPageUrl}
  nextPageUrl={nextPageUrl}
  alternates={alternates}
>
  <div class="content">
    <aside class="aside aside--left">
      <div class="tags tags--desktop">
        <div class="tags__top">
          <span class="icon">üè∑Ô∏è</span> {t('ui.categories')}
        </div>
        <CategoriesList />
      </div>
    </aside>

    <div class="content-center">
     <form class="search form hidden" onsubmit="event.preventDefault();">
        <div class="search__top">
          <span class="search__top-icon">üîé</span> {t('ui.search')}
        </div>
        <input
          type="text"
          class="input"
          placeholder={t('ui.search_placeholder')}
        />
      </form>
      <div id="search-results" style="display: none;"></div>

      <div class="tags tags--mob">
        <div class="tags__top">
          <span class="icon">üè∑Ô∏è</span> {t('ui.categories')}
        </div>
        <CategoriesList />
      </div>

      <div class="filter">
        <div class="filter__categories categories">
          <div class="categories__wrapper">
            {categoryIcon} <h1 class="categories__wrapper">{currentCategoryLabel}</h1>
          </div>

          {categoryDescription && (
            <p class="categories__description">{categoryDescription}</p>
          )}

          <div class="categories__content"></div>
        </div>
      </div>

      <div class="posts-list">
        {postsWithMetadata.length === 0 && (
          <div class="no-posts">{t('ui.no_posts')}</div>
        )}

        {postsWithMetadata.map((post) => (
          <a href={post.url} class="post">
            {shouldShowCategories && siteConfig.categories[post.category] && (
              <div class="post__category category">
                <div class="category__item category__item--light-blue">
                  {siteConfig.categories[post.category].icon}{' '}
                  {post.categoryLabel}
                </div>
              </div>
            )}

            <div class="post__date_right category">
              <div class="category__item date__item--light-blue">
                {post.date}
              </div>
            </div>

            {post.image && (
              <div class="post__thumbnail">
                <picture>
                  <img src={post.image} alt="" />
                </picture>
              </div>
            )}

            <div class="post__content">
              <h2 class="post__title">{post.title}</h2>
              {post.announcement && (
                <div class="post__summary">{post.announcement}</div>
              )}
            </div>
          </a>
        ))}
      </div>

      <div class="pagination">
        {page.url.prev ? (
          <a class="pagination__link" href={page.url.prev}>
            ‚Üê {t('ui.prev')}
          </a>
        ) : (
          <span class="pagination__link disabled" style="visibility: hidden;">
            {t('ui.prev')}
          </span>
        )}

        <span class="pagination__text">
          {page.currentPage} / {page.lastPage}
        </span>

        {page.url.next ? (
          <a class="pagination__link" href={page.url.next}>
            {t('ui.next')} ‚Üí
          </a>
        ) : (
          <span class="pagination__link disabled" style="visibility: hidden;">
            {t('ui.next')}
          </span>
        )}
      </div>

    </div>

    <div class="sidebar">
      <ProfileCard
        className="sidebar__profile"
        title={t('ui.profile')}
        description={t('ui.description')}
        profileHref={translatePath('/about')}
        avatarSrc={siteConfig.author.avatar}
        alt={t('name')}
      />

      <div class="service sidebar__service">
        <div class="title service__title">
          <span class="icon">üåü</span> {t('ui.projects')}
        </div>
        <div class="box-links service__box-links">
          <a
            href="https://github.com/JustSereja/morethan-log-astro"
            target="_blank"
            rel="noreferrer"
            class="box-links__link"
          >
            <svg
              stroke="currentColor"
              fill="currentColor"
              stroke-width="0"
              viewBox="0 0 1024 1024"
              class="icon"
              height="1em"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"></path>
            </svg>
            <span class="box-links__link-name">
              Morethan-Log for Astro
            </span>
          </a>
        </div>
      </div>

      <ContactLinks className="sidebar__contact" title={t('ui.contacts')} links={socialLinks} />

      <FooterCopy
        className="sidebar__footer"
        authorName={t('name')}
        authorUrl="https://sereja.com/"
      />
    </div>
  </div>
</Layout>
